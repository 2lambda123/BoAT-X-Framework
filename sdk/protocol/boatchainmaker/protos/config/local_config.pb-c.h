/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: config/local_config.proto */

#ifndef PROTOBUF_C_config_2flocal_5fconfig_2eproto__INCLUDED
#define PROTOBUF_C_config_2flocal_5fconfig_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "common/request.pb-c.h"

typedef struct _Config__DebugConfigRequest Config__DebugConfigRequest;
typedef struct _Config__DebugConfigResponse Config__DebugConfigResponse;
typedef struct _Config__CheckNewBlockChainConfigRequest Config__CheckNewBlockChainConfigRequest;
typedef struct _Config__CheckNewBlockChainConfigResponse Config__CheckNewBlockChainConfigResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * rquest for debug configuration
 */
struct  _Config__DebugConfigRequest
{
  ProtobufCMessage base;
  size_t n_pairs;
  Common__KeyValuePair **pairs;
};
#define CONFIG__DEBUG_CONFIG_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&config__debug_config_request__descriptor) \
    , 0,NULL }


/*
 * Rrsponse for debug configuration
 */
struct  _Config__DebugConfigResponse
{
  ProtobufCMessage base;
  /*
   * 0 success
   * 1 fail
   */
  int32_t code;
  /*
   * failure message
   */
  char *message;
};
#define CONFIG__DEBUG_CONFIG_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&config__debug_config_response__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


/*
 * request for check new block configuration
 */
struct  _Config__CheckNewBlockChainConfigRequest
{
  ProtobufCMessage base;
};
#define CONFIG__CHECK_NEW_BLOCK_CHAIN_CONFIG_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&config__check_new_block_chain_config_request__descriptor) \
     }


/*
 * response for check new block configuration
 */
struct  _Config__CheckNewBlockChainConfigResponse
{
  ProtobufCMessage base;
  /*
   * 0 success
   * 1 fail
   */
  int32_t code;
  /*
   * failure message
   */
  char *message;
};
#define CONFIG__CHECK_NEW_BLOCK_CHAIN_CONFIG_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&config__check_new_block_chain_config_response__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


/* Config__DebugConfigRequest methods */
void   config__debug_config_request__init
                     (Config__DebugConfigRequest         *message);
size_t config__debug_config_request__get_packed_size
                     (const Config__DebugConfigRequest   *message);
size_t config__debug_config_request__pack
                     (const Config__DebugConfigRequest   *message,
                      uint8_t             *out);
size_t config__debug_config_request__pack_to_buffer
                     (const Config__DebugConfigRequest   *message,
                      ProtobufCBuffer     *buffer);
Config__DebugConfigRequest *
       config__debug_config_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   config__debug_config_request__free_unpacked
                     (Config__DebugConfigRequest *message,
                      ProtobufCAllocator *allocator);
/* Config__DebugConfigResponse methods */
void   config__debug_config_response__init
                     (Config__DebugConfigResponse         *message);
size_t config__debug_config_response__get_packed_size
                     (const Config__DebugConfigResponse   *message);
size_t config__debug_config_response__pack
                     (const Config__DebugConfigResponse   *message,
                      uint8_t             *out);
size_t config__debug_config_response__pack_to_buffer
                     (const Config__DebugConfigResponse   *message,
                      ProtobufCBuffer     *buffer);
Config__DebugConfigResponse *
       config__debug_config_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   config__debug_config_response__free_unpacked
                     (Config__DebugConfigResponse *message,
                      ProtobufCAllocator *allocator);
/* Config__CheckNewBlockChainConfigRequest methods */
void   config__check_new_block_chain_config_request__init
                     (Config__CheckNewBlockChainConfigRequest         *message);
size_t config__check_new_block_chain_config_request__get_packed_size
                     (const Config__CheckNewBlockChainConfigRequest   *message);
size_t config__check_new_block_chain_config_request__pack
                     (const Config__CheckNewBlockChainConfigRequest   *message,
                      uint8_t             *out);
size_t config__check_new_block_chain_config_request__pack_to_buffer
                     (const Config__CheckNewBlockChainConfigRequest   *message,
                      ProtobufCBuffer     *buffer);
Config__CheckNewBlockChainConfigRequest *
       config__check_new_block_chain_config_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   config__check_new_block_chain_config_request__free_unpacked
                     (Config__CheckNewBlockChainConfigRequest *message,
                      ProtobufCAllocator *allocator);
/* Config__CheckNewBlockChainConfigResponse methods */
void   config__check_new_block_chain_config_response__init
                     (Config__CheckNewBlockChainConfigResponse         *message);
size_t config__check_new_block_chain_config_response__get_packed_size
                     (const Config__CheckNewBlockChainConfigResponse   *message);
size_t config__check_new_block_chain_config_response__pack
                     (const Config__CheckNewBlockChainConfigResponse   *message,
                      uint8_t             *out);
size_t config__check_new_block_chain_config_response__pack_to_buffer
                     (const Config__CheckNewBlockChainConfigResponse   *message,
                      ProtobufCBuffer     *buffer);
Config__CheckNewBlockChainConfigResponse *
       config__check_new_block_chain_config_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   config__check_new_block_chain_config_response__free_unpacked
                     (Config__CheckNewBlockChainConfigResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Config__DebugConfigRequest_Closure)
                 (const Config__DebugConfigRequest *message,
                  void *closure_data);
typedef void (*Config__DebugConfigResponse_Closure)
                 (const Config__DebugConfigResponse *message,
                  void *closure_data);
typedef void (*Config__CheckNewBlockChainConfigRequest_Closure)
                 (const Config__CheckNewBlockChainConfigRequest *message,
                  void *closure_data);
typedef void (*Config__CheckNewBlockChainConfigResponse_Closure)
                 (const Config__CheckNewBlockChainConfigResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor config__debug_config_request__descriptor;
extern const ProtobufCMessageDescriptor config__debug_config_response__descriptor;
extern const ProtobufCMessageDescriptor config__check_new_block_chain_config_request__descriptor;
extern const ProtobufCMessageDescriptor config__check_new_block_chain_config_response__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_config_2flocal_5fconfig_2eproto__INCLUDED */
