/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: discovery/discovery.proto */

#ifndef PROTOBUF_C_discovery_2fdiscovery_2eproto__INCLUDED
#define PROTOBUF_C_discovery_2fdiscovery_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Discovery__ChainInfo Discovery__ChainInfo;
typedef struct _Discovery__Node Discovery__Node;
typedef struct _Discovery__ChainList Discovery__ChainList;


/* --- enums --- */


/* --- messages --- */

/*
 * infomation of a blockchain
 */
struct  _Discovery__ChainInfo
{
  ProtobufCMessage base;
  /*
   * block height
   */
  int64_t block_height;
  /*
   * node list
   */
  size_t n_node_list;
  Discovery__Node **node_list;
};
#define DISCOVERY__CHAIN_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&discovery__chain_info__descriptor) \
    , 0, 0,NULL }


/*
 * information of a blockchain node
 */
struct  _Discovery__Node
{
  ProtobufCMessage base;
  /*
   * node identifier
   */
  char *node_id;
  /*
   * node address
   */
  char *node_address;
  /*
   * TLS certificate of the node
   */
  ProtobufCBinaryData node_tls_cert;
};
#define DISCOVERY__NODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&discovery__node__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, {0,NULL} }


/*
 * chain_id_list
 */
struct  _Discovery__ChainList
{
  ProtobufCMessage base;
  size_t n_chain_id_list;
  char **chain_id_list;
};
#define DISCOVERY__CHAIN_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&discovery__chain_list__descriptor) \
    , 0,NULL }


/* Discovery__ChainInfo methods */
void   discovery__chain_info__init
                     (Discovery__ChainInfo         *message);
size_t discovery__chain_info__get_packed_size
                     (const Discovery__ChainInfo   *message);
size_t discovery__chain_info__pack
                     (const Discovery__ChainInfo   *message,
                      uint8_t             *out);
size_t discovery__chain_info__pack_to_buffer
                     (const Discovery__ChainInfo   *message,
                      ProtobufCBuffer     *buffer);
Discovery__ChainInfo *
       discovery__chain_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   discovery__chain_info__free_unpacked
                     (Discovery__ChainInfo *message,
                      ProtobufCAllocator *allocator);
/* Discovery__Node methods */
void   discovery__node__init
                     (Discovery__Node         *message);
size_t discovery__node__get_packed_size
                     (const Discovery__Node   *message);
size_t discovery__node__pack
                     (const Discovery__Node   *message,
                      uint8_t             *out);
size_t discovery__node__pack_to_buffer
                     (const Discovery__Node   *message,
                      ProtobufCBuffer     *buffer);
Discovery__Node *
       discovery__node__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   discovery__node__free_unpacked
                     (Discovery__Node *message,
                      ProtobufCAllocator *allocator);
/* Discovery__ChainList methods */
void   discovery__chain_list__init
                     (Discovery__ChainList         *message);
size_t discovery__chain_list__get_packed_size
                     (const Discovery__ChainList   *message);
size_t discovery__chain_list__pack
                     (const Discovery__ChainList   *message,
                      uint8_t             *out);
size_t discovery__chain_list__pack_to_buffer
                     (const Discovery__ChainList   *message,
                      ProtobufCBuffer     *buffer);
Discovery__ChainList *
       discovery__chain_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   discovery__chain_list__free_unpacked
                     (Discovery__ChainList *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Discovery__ChainInfo_Closure)
                 (const Discovery__ChainInfo *message,
                  void *closure_data);
typedef void (*Discovery__Node_Closure)
                 (const Discovery__Node *message,
                  void *closure_data);
typedef void (*Discovery__ChainList_Closure)
                 (const Discovery__ChainList *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor discovery__chain_info__descriptor;
extern const ProtobufCMessageDescriptor discovery__node__descriptor;
extern const ProtobufCMessageDescriptor discovery__chain_list__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_discovery_2fdiscovery_2eproto__INCLUDED */
